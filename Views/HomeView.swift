import SwiftUI

struct HomeView: View {
    @EnvironmentObject var authManager: AuthManager
    @State private var currentNewsIndex = 0
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –∏–º–µ–Ω–∏ (–≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ - —ç—Ç–æ –∏–º—è)
    private var firstName: String {
        if !authManager.userFullName.isEmpty {
            let components = authManager.userFullName.components(separatedBy: " ")
            if components.count >= 2 {
                return components[1] // –í—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ - —ç—Ç–æ –∏–º—è
            }
            return components.first ?? authManager.userName
        }
        return authManager.userName
    }
    
    var body: some View {
        ZStack {
            AnimatedGradientBackground()
            
            ScrollView {
                VStack(alignment: .leading, spacing: 16) {
                    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                    Text("–ü—Ä–∏–≤—ñ—Ç, \(firstName) üëã")
                        .font(.system(size: 36, weight: .regular, design: .default))
                        .padding(.top, 64)
                        .padding(.bottom, 8)
                    
                    // –ù–µ–∑–ª–∞–º–Ω—ñ—Å—Ç—å
                    Button(action: {
                        print("–ù–µ–∑–ª–∞–º–Ω—ñ—Å—Ç—å")
                    }) {
                        ZStack(alignment: .bottomTrailing) {
                            HStack(spacing: 12) {
                                VStack(alignment: .leading, spacing: 8) {
                                    Text("–ù–µ–∑–ª–∞–º–Ω—ñ—Å—Ç—å")
                                        .font(.system(size: 22, weight: .regular, design: .default))
                                        .foregroundColor(.black)
                                    Text("–ú–∞–ø–∞ –ü—É–Ω–∫—Ç—ñ–≤ –ù–µ–∑–ª–∞–º–Ω–æ—Å—Ç—ñ —Ç–∞ —É–∫—Ä–∏—Ç—Ç—ñ–≤.\n–ó–∞—è–≤–∞ –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫.")
                                        .font(.system(size: 16, weight: .regular, design: .default))
                                        .foregroundColor(.black)
                                        .multilineTextAlignment(.leading)
                                        .lineLimit(3)
                                    
                                    HStack(spacing: -8) {
                                        Circle()
                                            .fill(Color.blue)
                                            .frame(width: 28, height: 28)
                                            .overlay(
                                                Image(systemName: "shield.fill")
                                                    .font(.system(size: 14))
                                                    .foregroundColor(.white)
                                            )
                                            .zIndex(1)
                                        
                                        Circle()
                                            .fill(Color.yellow)
                                            .frame(width: 28, height: 28)
                                            .overlay(
                                                Image(systemName: "bolt.fill")
                                                    .font(.system(size: 14))
                                                    .foregroundColor(.white)
                                            )
                                    }
                                    .padding(.top, 4)
                                }
                                
                                Spacer()
                            }
                            .padding(16)
                            
                            // –°—Ç—Ä–µ–ª–∫–∞ –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É
                            Circle()
                                .fill(Color.black)
                                .frame(width: 28, height: 28)
                                .overlay(
                                    Image(systemName: "arrow.right")
                                        .font(.system(size: 12, weight: .semibold))
                                        .foregroundColor(.white)
                                )
                                .padding(12)
                        }
                        .background(
                            RoundedRectangle(cornerRadius: 16)
                                .fill(Color.white.opacity(0.7))
                        )
                    }
                    
                    // –ö–Ω–æ–ø–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
                    HStack(spacing: 12) {
                        ServiceButton(icon: "qrcode", title: "–°–∫–∞–Ω—É–≤–∞—Ç–∏\nQR-–∫–æ–¥")
                        ServiceButton(icon: "shield.fill", title: "–í—ñ–π—Å—å–∫–æ–≤—ñ\n–æ–±–ª—ñ–≥–∞—Ü—ñ—ó")
                        ServiceButton(icon: "antenna.radiowaves.left.and.right", title: "–í—ñ–¥—Å—É—Ç–Ω—ñ–π\n–∑–≤'—è–∑–æ–∫")
                    }
                    
                    // –õ–Ü–ù–Ü–Ø –î–†–û–ù–Ü–í
                    Button(action: {
                        print("–õ—ñ–Ω—ñ—è –¥—Ä–æ–Ω—ñ–≤")
                    }) {
                        ZStack {
                            // Background image
                            Image("liniya-droniv")
                                .resizable()
                                .aspectRatio(contentMode: .fill)
                                .frame(height: 180)
                                .clipped()
                            
                            // Dark overlay
                            Rectangle()
                                .fill(Color.black.opacity(0.3))
                            
                            // Content
                            VStack {
                                Spacer()
                                
                                HStack {
                                    Text("–ó–º—ñ–Ω–∏—Ç–∏ —Ö—ñ–¥ –ø–æ–¥—ñ–π")
                                        .font(.system(size: 17, weight: .regular, design: .default))
                                        .foregroundColor(.white)
                                    
                                    Spacer()
                                    
                                    Circle()
                                        .fill(Color.white)
                                        .frame(width: 32, height: 32)
                                        .overlay(
                                            Image(systemName: "arrow.right")
                                                .font(.system(size: 14, weight: .semibold))
                                                .foregroundColor(.black)
                                        )
                                }
                                .padding(16)
                                .background(Color.black.opacity(0.5))
                            }
                        }
                        .frame(height: 180)
                        .cornerRadius(16)
                    }
                    
                    // –©–æ –Ω–æ–≤–æ–≥–æ
                    VStack(alignment: .leading, spacing: 8) {
                        Text("–©–æ –Ω–æ–≤–æ–≥–æ?")
                            .font(.system(size: 22, weight: .regular, design: .default))
                        
                        VStack(spacing: 16) {
                            TabView(selection: $currentNewsIndex) {
                                NewsCard(
                                    emoji: "üöóüö´",
                                    time: "23 –∂–æ–≤—Ç–Ω—è, 17:15",
                                    title: "–ó–∞–º—ñ–Ω–∞ –≤–æ–¥—ñ–π—Å—å–∫–æ–≥–æ –ø–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è\n—Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–∞ –ø–∞—É–∑—ñ"
                                )
                                .tag(0)
                                
                                NewsCard(
                                    emoji: "üß≥üè†üìÑ",
                                    time: "–°—å–æ–≥–æ–¥–Ω—ñ, 10:30",
                                    title: "–î–æ–ª—É—á–∞–π—Ç–µ—Å—å –¥–æ –±–µ—Ç–∞-—Ç–µ—Å—Ç—É –Ω–æ–≤–æ—ó\n–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –†–µ—î—Å—Ç—Ä—É –∑–±–∏—Ç–∫—ñ–≤"
                                )
                                .tag(1)
                            }
                            .tabViewStyle(.page(indexDisplayMode: .never))
                            .frame(height: 200)
                            
                            // Custom page indicator
                            HStack(spacing: 8) {
                                ForEach(0..<2) { index in
                                    Circle()
                                        .fill(index == currentNewsIndex ? Color.black : Color.gray.opacity(0.3))
                                        .frame(width: 8, height: 8)
                                        .animation(.spring(response: 0.3), value: currentNewsIndex)
                                }
                            }
                        }
                    }
                    
                    // –ü–æ–ø—É–ª—è—Ä–Ω—ñ –ø–æ—Å–ª—É–≥–∏
                    VStack(alignment: .leading, spacing: 12) {
                        Text("–ü–æ–ø—É–ª—è—Ä–Ω—ñ –ø–æ—Å–ª—É–≥–∏")
                            .font(.system(size: 22, weight: .regular, design: .default))
                        
                        VStack(spacing: 0) {
                            PopularServiceButton(title: "–û–ø–∏—Ç—É–≤–∞–Ω–Ω—è") {
                                print("–û–ø–∏—Ç—É–≤–∞–Ω–Ω—è")
                            }
                            
                            Divider()
                                .padding(.leading, 20)
                            
                            PopularServiceButton(title: "–ó–∞–º—ñ–Ω–∞ –≤–æ–¥—ñ–π—Å—å–∫–æ–≥–æ –ø–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è") {
                                print("–ó–∞–º—ñ–Ω–∞ –≤–æ–¥—ñ–π—Å—å–∫–æ–≥–æ –ø–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è")
                            }
                            
                            Divider()
                                .padding(.leading, 20)
                            
                            PopularServiceButton(title: "–ü–æ–¥–∞—Ç–∫–∏ –§–û–ü") {
                                print("–ü–æ–¥–∞—Ç–∫–∏ –§–û–ü")
                            }
                        }
                        .background(
                            RoundedRectangle(cornerRadius: 16)
                                .fill(Color.white.opacity(0.7))
                        )
                    }
                    
                    Spacer(minLength: 100)
                }
                .padding(.horizontal, 20)
            }
        }
    }
}

struct ServiceButton: View {
    let icon: String
    let title: String
    
    var body: some View {
        VStack(spacing: 8) {
            RoundedRectangle(cornerRadius: 12)
                .fill(Color.black)
                .frame(width: 56, height: 56)
                .overlay(
                    Image(systemName: icon)
                        .foregroundColor(.white)
                        .font(.system(size: 24))
                )
            
            Text(title)
                .font(.system(size: 13, weight: .regular, design: .default))
                .foregroundColor(.black)
                .multilineTextAlignment(.center)
                .lineLimit(2)
                .fixedSize(horizontal: false, vertical: true)
        }
        .frame(maxWidth: .infinity)
        .padding(.vertical, 12)
        .padding(.horizontal, 8)
    }
}

// News Card Component
struct NewsCard: View {
    let emoji: String
    let time: String
    let title: String
    
    var body: some View {
        VStack(alignment: .leading, spacing: 0) {
            // Emoji section with gradient background
            ZStack {
                LinearGradient(
                    colors: [
                        Color(hex: "FFF5E1"),
                        Color(hex: "FFE4B5")
                    ],
                    startPoint: .topLeading,
                    endPoint: .bottomTrailing
                )
                
                Text(emoji)
                    .font(.system(size: 60))
            }
            .frame(height: 120)
            
            // Text section
            VStack(alignment: .leading, spacing: 8) {
                Text(time)
                    .font(.system(size: 13, weight: .regular, design: .default))
                    .foregroundColor(.gray)
                
                Text(title)
                    .font(.system(size: 17, weight: .regular, design: .default))
                    .foregroundColor(.black)
                    .lineLimit(2)
                    .multilineTextAlignment(.leading)
                    .fixedSize(horizontal: false, vertical: true)
            }
            .padding(16)
            .frame(maxWidth: .infinity, alignment: .leading)
            .background(Color.white.opacity(0.9))
        }
        .clipShape(RoundedRectangle(cornerRadius: 16))
        .shadow(color: Color.black.opacity(0.1), radius: 5, x: 0, y: 2)
    }
}

// Popular Service Button Component
struct PopularServiceButton: View {
    let title: String
    let action: () -> Void
    
    var body: some View {
        Button(action: action) {
            HStack {
                Text(title)
                    .font(.system(size: 17, weight: .regular, design: .default))
                    .foregroundColor(.black)
                
                Spacer()
                
                Circle()
                    .fill(Color.black)
                    .frame(width: 28, height: 28)
                    .overlay(
                        Image(systemName: "arrow.right")
                            .font(.system(size: 12, weight: .semibold))
                            .foregroundColor(.white)
                    )
            }
            .padding(.horizontal, 20)
            .frame(height: 56)
            .contentShape(Rectangle())
        }
    }
}

